imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: legacy_aliases.yml }
    
framework:
    #esi:             ~
    translator:      { fallback: '%locale%' }
    secret:          '%secret%'
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: '%kernel.debug%'
    form:            true
    csrf_protection: true
    validation:      { enable_annotations: true }
    templating:      { engines: ['twig'] } #assets_version: SomeVersionScheme
    default_locale:  '%locale%'
    #trust_proxy_headers: false # Whether or not the Request object should trust proxy headers (X_FORWARDED_FOR/HTTP_CLIENT_IP)
    session:
        save_path: "%kernel.root_dir%/../var/sessions/%kernel.environment%"

# Twig Configuration
twig:
    debug:            '%kernel.debug%'
    strict_variables: '%kernel.debug%'
    globals:
        warning_load_level: '%warning_load_level%'
        url_prefix: '%url_prefix%'

# Doctrine Configuration
doctrine:
    dbal:
        driver:   '%database_driver%'
        host:     '%database_host%'
        port:     '%database_port%'
        dbname:   '%database_name%'
        user:     '%database_user%'
        password: '%database_password%'
        charset:  UTF8
        server_version: 5.5

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host:      '%mailer_host%'
    username:  '%mailer_user%'
    password:  '%mailer_password%'
    # spool:     { type: memory }

monolog:
    handlers:
        main:
            type:  stream
            path:  '%kernel.logs_dir%/%kernel.environment%.log'
            level: debug
        firephp:
            type:  firephp
            level: info

services:
    _defaults:
        autowire: true
        autoconfigure: true
        public: false
    Binovo\ElkarBackupBundle\:
        resource: '../../src/Binovo/ElkarBackupBundle/*'
        exclude: '../../src/Binovo/ElkarBackupBundle/{Controller,Entity,Lib,Repository}'
    Symfony\Bridge\Monolog\Logger:
        arguments: [BnvWeb]
        calls:
            - [pushProcessor, ["@BnvWebUserLoggerProcessor"]]
            - [pushHandler,   ["@StreamHandler"]]
            - [pushHandler,   ["@BnvLoggerHandler"]]
    Binovo\ElkarBackupBundle\Logger\LoggerHandler:
        calls:
            - [setContainer,  ["@service_container"] ]
    Monolog\Handler\StreamHandler:
        # 200 = INFO, see Monolog::Logger for the values of log levels
        arguments: ['%kernel.logs_dir%/BnvLog.log', 200]
        calls:
            - [setFormatter, ["@BnvWebLoggerFormatter"]]
    Binovo\ElkarBackupBundle\Logger\WebUserLoggerProcessor:
        calls:
            - [setContainer, ["@service_container"] ]
    Monolog\Formatter\LineFormatter:
        arguments: ["[%%datetime%%] '%%channel%%.%%level_name%%: '%%message%% '%%context%% '%%extra.user_name%% '%%extra.user_email%%\n"]
    Binovo\ElkarBackupBundle\Listener\LoginListener:
        arguments: ["@service_container"]
        tags:
            - { name: kernel.event_listener, event: security.interactive_login }
    Binovo\ElkarBackupBundle\Twig\Extension:
        tags:
            - { name: 'twig.extension' }
    Binovo\ElkarBackupBundle\Listener\LocaleListener:
        arguments: ['%kernel.default_locale%']
        tags:
            - { name: kernel.event_subscriber }
    Binovo\ElkarTahoeBundle\Utils\TahoeBackup:
        arguments: ["@BnvWebLogger", '%home%']
    Binovo\ElkarBackupBundle\Menu\Builder:
        arguments: ["@knp_menu.factory", "@doctrine.orm.entity_manager", "@security.authorization_checker", "@translator.data_collector", "@Tahoe"]
        tags:
            - { name: knp_menu.menu_builder, method: mainMenu, alias: main }
parameters:
    supported_locales: [es, en, eu, de]
